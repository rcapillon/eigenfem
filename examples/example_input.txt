// Sample input file for custom study using eigenfem.
// This example performs a frequency-domain analysis using the FrequencySweep solver, 
// similar to the example executable 'example_frequency_coarse', and the input file defines every usable arguments.

// The file parser only looks for sections beginning with '# ' with a specific section name 
// in capital letters after that (e.g. # MESH).
// After this section header, the parser will look for specific arguments signaled by a specific line beginning with '## ' 
// and followed by the name of the argument in capital letters (e.g. ## YOUNG MODULUS).
// Some arguments are expected as a list, such as a force vector. 
// Such lists are written on the same line, with a comma used to separate values. 
// You can see examples of lists in this sample file for the definition of material properties or force vectors.

// The input file should end with the last line being "# END" to help signal the input parser 
// that then end of file has been reached.

// It is the user's responsibility to make sure that all required arguments have been given 
// for the required study to be able to run correctly.


// The '# MESH' section requires a '## PATH' subsection with an absolute path to the mesh file, 
// or a relative path from the build directory where the 'eigenfem' executable is located.
# MESH
## PATH
../examples/data/plate.mesh

// In the '# MATERIAL' section, the user must provide the mass density (in kg/m^3), 
// Young modulus (in Pa) and Poisson ratio (unitless), in the following way:
# MATERIAL
## MASS DENSITY
7800
## YOUNG MODULUS
2.1e11
## POISSON RATION
0.3

// Here, the '# DIRICHLET CONDITIONS' section expects a '## TAGS' subsection where all tags with a zero Dirichlet condition are given 
// as a list (comma-separated values for tags)
# DIRICHLET CONDITIONS
## TAGS
2

// The '# FORCES' section will look for an optional volume force vector (subsection '## VOLUME FORCE') 
// followed by the force vector given as a list (in N/m^3), and for an arbitrary number of '## SURFACE FORCE' subsections (possibly none),
// each followed by two lines, first, a single tag number for the 2D surface where the force will be applied, 
// and then the surface force vector given as a list (in N/m^2).
// If you want to include a volume force, specify it first before any surface force.
// End the force definitions with the following line: '# END FORCES'.
# FORCES
## VOLUME FORCE
0, 0, 76518
## SURFACE FORCE
3
0, 0, 7.5e9
## SURFACE FORCE
3
0, 0, 7.5e9
# END FORCES

// The '# DAMPING' section expects two subsections, namely '## MASS' and '## STIFFNESS' in that order,
// each followed by the value of the corresponding Rayleigh-damping coefficients on the next line.
// Providing this section is optional, and in its absence, both damping coefficients will be set to 0.
// If only one value is used, set the other one to 0 and still put '## MASS' before '## STIFFNESS'.
# DAMPING
## MASS
1e-3
## STIFFNESS
1e-3

// The '# SOLVER' section first expects the desired solver's name, followed by subsections defining specific arguments
// required by the chosen solver. The 3 available solvers are 'MODAL', 'STATICS' and 'FREQUENCYSWEEP'.

// The 'MODAL' solver only requires a '## NUMBER OF MODES' subsection defining the number N of modes to be calculated 
// (corresponding to the first N lowest eigenfrequencies).

// The 'STATICS' solver requires no subsection, but in order to obtain a solution, at least a Dirichlet condition 
// and any force vector must have been defined previously 
// (forces are actually optional but without any, no displacement will be observed).

// The 'FREQUENCYSWEEP' solver uses a reduced-order model for solving the problem for a list of frequencies.
// First, the user must provide either a '## COMPUTE ROM' or a '## LOAD ROM' subsection to define the reduced-order model. 
// If both are specified, the code will prioritize loading the reduced-order basis.
// The '## COMPUTE ROM' subsection must be followed by the number of elastic modes to compute as a reduced basis 
// (first N lowest eigenfrequencies just as with the MODAL solver).
// The '## LOAD ROM' subsection must be followed by the path to the data file where the reduced basis is located.
// The path may be an absolute path or a path relative to the build folder where the 'eigenfem' executable is located.
// Finally, a '## FREQUENCIES' subsection is necessary, providing 3 values in separated lines, 
// defining the frequency range with a minimum frequency, a maximum frequency and the number of desired frequency values. 
// All frequencies must be given in Hz. 
# SOLVER
FREQUENCYSWEEP
## COMPUTE ROM
10
## FREQUENCIES
1200
2200
300

// The '# OUTPUT' section requires a '## STUDY NAME' subsection followed by a string 
// that will be used in the name for the output files.
// After that, a '## PATH' subsection is needed and must provide an absolute or relative path 
// to a folder where the output VTK files will be stored.
# OUTPUT
## STUDY NAME
example_custom
## PATH
../examples/results/example_custom/

// Signal end of file
# END